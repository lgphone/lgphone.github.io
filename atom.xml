<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Yang Site</title>
  
  <subtitle>小羊的小站</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://www.izhihu.me/"/>
  <updated>2019-11-27T03:57:10.655Z</updated>
  <id>https://www.izhihu.me/</id>
  
  <author>
    <name>YangEver</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>kubernetes 内部多个应用之间的通信方法</title>
    <link href="https://www.izhihu.me/2019/11/27/kubernetes-fu-wu-jian-tong-xin/"/>
    <id>https://www.izhihu.me/2019/11/27/kubernetes-fu-wu-jian-tong-xin/</id>
    <published>2019-11-27T02:05:56.000Z</published>
    <updated>2019-11-27T03:57:10.655Z</updated>
    
    <content type="html"><![CDATA[<hr><p>举例我们一共有两个项目，一个是资源库resource-api，一个是用户及权限user-api，在资源库中需要调用用户模块鉴别用户的信息。<br>在k8s内部这两个服务是如何通信的呢？</p><a id="more"></a><p>其实基于k8s的service 就可以了，我们内部已经有了coredns 当我们在pod内部请求service的name的时候会自动解析到对应的service ip上，并通过service做负载均衡</p><p><em>下面我们基于python实战一下这两个服务的交互过程</em></p><ul><li>Harbor Registry domain: 192.168.1.113</li></ul><h2 id="创建用户权限项目"><a href="#创建用户权限项目" class="headerlink" title="创建用户权限项目"></a>创建用户权限项目</h2><h4 id="初始化镜像build目录"><a href="#初始化镜像build目录" class="headerlink" title="初始化镜像build目录:"></a>初始化镜像build目录:</h4><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cd /ops/temp</span><br><span class="line">mkdir build-images &amp;&amp; cd build-images</span><br><span class="line">mkdir user-api &amp;&amp; cd user-api</span><br><span class="line">python3 -m venv venv &amp;&amp; source venv/bin/activate</span><br><span class="line">mkdir app</span><br><span class="line">vim app/main.py</span><br></pre></td></tr></table></figure><h4 id="编写用户项目接口-实现访问-api-返回用户的基础信息"><a href="#编写用户项目接口-实现访问-api-返回用户的基础信息" class="headerlink" title="编写用户项目接口,实现访问/ api 返回用户的基础信息:"></a>编写用户项目接口,实现访问/ api 返回用户的基础信息:</h4><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"><span class="hljs-keyword">import</span> json</span><br><span class="line"><span class="hljs-keyword">import</span> socket</span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask</span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="hljs-meta">@app.route('/')</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">hello_world</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="hljs-string">"hostname"</span>: socket.gethostname(),</span><br><span class="line">        <span class="hljs-string">"user_name"</span>: <span class="hljs-string">'xiaoming'</span>,</span><br><span class="line">        <span class="hljs-string">"passport"</span>: <span class="hljs-string">'28dku73kd0210ewl43y47d'</span>,</span><br><span class="line">        <span class="hljs-string">"role_id"</span>: <span class="hljs-number">2</span>,</span><br><span class="line">        <span class="hljs-string">"time"</span>: str(time.time())</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">return</span> json.dumps(data)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="hljs-string">"0.0.0.0"</span>, port=<span class="hljs-number">5000</span>)</span><br></pre></td></tr></table></figure><h4 id="生成依赖文件"><a href="#生成依赖文件" class="headerlink" title="生成依赖文件"></a>生成依赖文件</h4><p><code>pip freeze &gt; requirements.txt</code></p><h4 id="编写Dockerfile"><a href="#编写Dockerfile" class="headerlink" title="编写Dockerfile"></a>编写Dockerfile</h4><p><code>vim Dockerfile</code></p><figure class="highlight dockerfile hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">FROM</span> python:<span class="hljs-number">3.6</span>.<span class="hljs-number">8</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">RUN</span><span class="hljs-bash"> mkdir /code</span></span><br><span class="line"><span class="hljs-keyword">COPY</span><span class="hljs-bash"> app /code</span></span><br><span class="line"><span class="hljs-keyword">COPY</span><span class="hljs-bash"> requirements.txt /code</span></span><br><span class="line"><span class="hljs-keyword">RUN</span><span class="hljs-bash"> chmod +x /code/main.py &amp;&amp; \</span></span><br><span class="line"><span class="hljs-bash">    pip install -r /code/requirements.txt -i https://pypi.douban.com/simple</span></span><br><span class="line"><span class="hljs-keyword">WORKDIR</span><span class="hljs-bash"> /code</span></span><br><span class="line"><span class="hljs-keyword">CMD</span><span class="hljs-bash"> [<span class="hljs-string">"./main.py"</span>]</span></span><br></pre></td></tr></table></figure><h4 id="创建image"><a href="#创建image" class="headerlink" title="创建image"></a>创建image</h4><p><code>docker build -t 192.168.1.113/library/user-api:1.0 .</code></p><h4 id="推送到harbor仓库"><a href="#推送到harbor仓库" class="headerlink" title="推送到harbor仓库"></a>推送到harbor仓库</h4><p><code>docker push 192.168.1.113/library/user-api:1.0</code></p><h2 id="创建资源库项目"><a href="#创建资源库项目" class="headerlink" title="创建资源库项目"></a>创建资源库项目</h2><h4 id="初始化镜像build目录-1"><a href="#初始化镜像build目录-1" class="headerlink" title="初始化镜像build目录:"></a>初始化镜像build目录:</h4><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd /ops/temp/build-images</span><br><span class="line">mkdir resource-api &amp;&amp; cd resource-api</span><br><span class="line">python3 -m venv venv &amp;&amp; source venv/bin/activate</span><br><span class="line">mkdir app</span><br><span class="line">vim app/main.py</span><br></pre></td></tr></table></figure><h4 id="编写资源库项目接口-实现访问-api-返回资源信息以及用户信息"><a href="#编写资源库项目接口-实现访问-api-返回资源信息以及用户信息" class="headerlink" title="编写资源库项目接口,实现访问/ api 返回资源信息以及用户信息:"></a>编写资源库项目接口,实现访问/ api 返回资源信息以及用户信息:</h4><figure class="highlight python hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-comment">#!/usr/bin/env python3</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">import</span> os</span><br><span class="line"><span class="hljs-keyword">import</span> time</span><br><span class="line"><span class="hljs-keyword">import</span> json</span><br><span class="line"><span class="hljs-keyword">import</span> socket</span><br><span class="line"><span class="hljs-keyword">import</span> requests</span><br><span class="line"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask</span><br><span class="line"> </span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"><span class="hljs-comment"># 访问user api的接口url  是在k8s中user-api的service name + port</span></span><br><span class="line">user_api_api = <span class="hljs-string">"http://user-api:5000/"</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="hljs-meta">@app.route('/')</span></span><br><span class="line"><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">service</span><span class="hljs-params">()</span>:</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="hljs-string">"self_hostname"</span>: socket.gethostname(),</span><br><span class="line">        <span class="hljs-string">"book_id"</span>: <span class="hljs-number">1</span>,</span><br><span class="line">        <span class="hljs-string">"book_name"</span>: <span class="hljs-string">"《钢铁是怎样炼成的》"</span>,</span><br><span class="line">        <span class="hljs-string">"book_author"</span>: <span class="hljs-string">"不知"</span>,</span><br><span class="line">        <span class="hljs-string">"book_size"</span>: <span class="hljs-number">120973</span>,</span><br><span class="line">        <span class="hljs-string">"book_info"</span>: <span class="hljs-string">"序言 1 2 3 4 5 6 7"</span>,</span><br><span class="line">        <span class="hljs-string">"status"</span>: <span class="hljs-number">200</span>,</span><br><span class="line">        <span class="hljs-string">"user_info"</span>: <span class="hljs-literal">None</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="hljs-keyword">try</span>:</span><br><span class="line">        req = requests.get(user_api_api)</span><br><span class="line">        <span class="hljs-keyword">if</span> req.status_code == <span class="hljs-number">200</span>:</span><br><span class="line">            res = req.json()</span><br><span class="line">            data[<span class="hljs-string">'user_info'</span>] = res</span><br><span class="line">        <span class="hljs-keyword">else</span>:</span><br><span class="line">            data[<span class="hljs-string">'status'</span>] = <span class="hljs-number">501</span></span><br><span class="line">    <span class="hljs-keyword">except</span> Exception <span class="hljs-keyword">as</span> e:</span><br><span class="line">        data[<span class="hljs-string">'status'</span>] = <span class="hljs-number">500</span></span><br><span class="line">        data[<span class="hljs-string">'err'</span>] = str(e)</span><br><span class="line">    <span class="hljs-keyword">return</span> json.dumps(data)</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">'__main__'</span>:</span><br><span class="line">    app.run(host=<span class="hljs-string">"0.0.0.0"</span>,port=<span class="hljs-number">8010</span>)</span><br></pre></td></tr></table></figure><h4 id="生成依赖文件-1"><a href="#生成依赖文件-1" class="headerlink" title="生成依赖文件"></a>生成依赖文件</h4><p><code>pip freeze &gt; requirements.txt</code></p><h4 id="编写Dockerfile-1"><a href="#编写Dockerfile-1" class="headerlink" title="编写Dockerfile"></a>编写Dockerfile</h4><p><code>vim Dockerfile</code></p><figure class="highlight dockerfile hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-keyword">FROM</span> python:<span class="hljs-number">3.6</span>.<span class="hljs-number">8</span></span><br><span class="line"></span><br><span class="line"><span class="hljs-keyword">RUN</span><span class="hljs-bash"> mkdir /code</span></span><br><span class="line"><span class="hljs-keyword">COPY</span><span class="hljs-bash"> app /code</span></span><br><span class="line"><span class="hljs-keyword">COPY</span><span class="hljs-bash"> requirements.txt /code</span></span><br><span class="line"><span class="hljs-keyword">RUN</span><span class="hljs-bash"> chmod +x /code/main.py &amp;&amp; \</span></span><br><span class="line"><span class="hljs-bash">    pip install -r /code/requirements.txt -i https://pypi.douban.com/simple</span></span><br><span class="line"><span class="hljs-keyword">WORKDIR</span><span class="hljs-bash"> /code</span></span><br><span class="line"><span class="hljs-keyword">CMD</span><span class="hljs-bash"> [<span class="hljs-string">"./main.py"</span>]</span></span><br></pre></td></tr></table></figure><h4 id="创建image-1"><a href="#创建image-1" class="headerlink" title="创建image"></a>创建image</h4><p><code>docker build -t 192.168.1.113/library/resource-api:1.0 .</code></p><h4 id="推送到harbor仓库-1"><a href="#推送到harbor仓库-1" class="headerlink" title="推送到harbor仓库"></a>推送到harbor仓库</h4><p><code>docker push 192.168.1.113/library/resource-api:1.0</code></p><h2 id="部署user-api项目到k8s中"><a href="#部署user-api项目到k8s中" class="headerlink" title="部署user-api项目到k8s中"></a>部署user-api项目到k8s中</h2><h4 id="编写yaml部署文件"><a href="#编写yaml部署文件" class="headerlink" title="编写yaml部署文件"></a>编写yaml部署文件</h4><p><code>vim user-api.yaml</code></p><figure class="highlight yaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span></span><br><span class="line"><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span></span><br><span class="line"><span class="hljs-attr">metadata:</span></span><br><span class="line">  <span class="hljs-attr">name:</span> <span class="hljs-string">user-api</span></span><br><span class="line">  <span class="hljs-attr">labels:</span></span><br><span class="line">    <span class="hljs-attr">app:</span> <span class="hljs-string">user-api</span></span><br><span class="line"><span class="hljs-attr">spec:</span></span><br><span class="line">  <span class="hljs-attr">type:</span> <span class="hljs-string">ClusterIP</span></span><br><span class="line">  <span class="hljs-attr">selector:</span></span><br><span class="line">    <span class="hljs-attr">app:</span> <span class="hljs-string">user-api</span></span><br><span class="line">  <span class="hljs-attr">ports:</span></span><br><span class="line">  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">user-api</span></span><br><span class="line">    <span class="hljs-attr">port:</span> <span class="hljs-number">5000</span></span><br><span class="line">    <span class="hljs-attr">targetPort:</span> <span class="hljs-number">5000</span></span><br><span class="line"><span class="hljs-meta">---</span></span><br><span class="line"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span></span><br><span class="line"><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span></span><br><span class="line"><span class="hljs-attr">metadata:</span></span><br><span class="line">  <span class="hljs-attr">name:</span> <span class="hljs-string">user-api</span></span><br><span class="line">  <span class="hljs-attr">labels:</span></span><br><span class="line">    <span class="hljs-attr">addonmanager.kubernetes.io/mode:</span> <span class="hljs-string">Reconcile</span></span><br><span class="line">    <span class="hljs-attr">app_type:</span> <span class="hljs-string">backend</span></span><br><span class="line"><span class="hljs-attr">spec:</span></span><br><span class="line">  <span class="hljs-attr">selector:</span></span><br><span class="line">    <span class="hljs-attr">matchLabels:</span></span><br><span class="line">      <span class="hljs-attr">app:</span> <span class="hljs-string">user-api</span></span><br><span class="line">  <span class="hljs-attr">replicas:</span> <span class="hljs-number">3</span></span><br><span class="line">  <span class="hljs-attr">template:</span></span><br><span class="line">    <span class="hljs-attr">metadata:</span></span><br><span class="line">      <span class="hljs-attr">labels:</span></span><br><span class="line">        <span class="hljs-attr">app:</span> <span class="hljs-string">user-api</span></span><br><span class="line">    <span class="hljs-attr">spec:</span></span><br><span class="line">      <span class="hljs-attr">containers:</span></span><br><span class="line">      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">user-api</span></span><br><span class="line">        <span class="hljs-attr">image:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.113</span><span class="hljs-string">/library/user-api:1.0</span></span><br><span class="line">        <span class="hljs-attr">ports:</span></span><br><span class="line">        <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">5000</span></span><br></pre></td></tr></table></figure><h4 id="执行部署"><a href="#执行部署" class="headerlink" title="执行部署"></a>执行部署</h4><p><code>kubectl apply -f user-api.yaml</code></p><h4 id="检查服务"><a href="#检查服务" class="headerlink" title="检查服务"></a>检查服务</h4><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 查看user-api 的service ip地址</span></span><br><span class="line">kubectl get service -o wide</span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 测试访问是否ok</span></span><br><span class="line">curl 10.68.15.227:5000</span><br></pre></td></tr></table></figure><figure class="highlight json hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="hljs-attr">"hostname"</span>: <span class="hljs-string">"user-api-84f8484446-z8wqd"</span>,</span><br><span class="line">  <span class="hljs-attr">"user_name"</span>: <span class="hljs-string">"xiaoming"</span>,</span><br><span class="line">  <span class="hljs-attr">"passport"</span>: <span class="hljs-string">"28dku73kd0210ewl43y47d"</span>,</span><br><span class="line">  <span class="hljs-attr">"role_id"</span>: <span class="hljs-number">2</span>,</span><br><span class="line">  <span class="hljs-attr">"time"</span>: <span class="hljs-string">"1574824013.1845496"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="部署resource-api项目到k8s中"><a href="#部署resource-api项目到k8s中" class="headerlink" title="部署resource-api项目到k8s中"></a>部署resource-api项目到k8s中</h2><h4 id="编写yaml部署文件-1"><a href="#编写yaml部署文件-1" class="headerlink" title="编写yaml部署文件"></a>编写yaml部署文件</h4><p><code>vim resource-api.yaml</code></p><figure class="highlight yaml hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">v1</span></span><br><span class="line"><span class="hljs-attr">kind:</span> <span class="hljs-string">Service</span></span><br><span class="line"><span class="hljs-attr">metadata:</span></span><br><span class="line">  <span class="hljs-attr">name:</span> <span class="hljs-string">resource-api</span></span><br><span class="line">  <span class="hljs-attr">labels:</span></span><br><span class="line">    <span class="hljs-attr">app:</span> <span class="hljs-string">resource-api</span></span><br><span class="line"><span class="hljs-attr">spec:</span></span><br><span class="line">  <span class="hljs-attr">type:</span> <span class="hljs-string">ClusterIP</span></span><br><span class="line">  <span class="hljs-attr">selector:</span></span><br><span class="line">    <span class="hljs-attr">app:</span> <span class="hljs-string">resource-api</span></span><br><span class="line">  <span class="hljs-attr">ports:</span></span><br><span class="line">  <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">resource-api</span></span><br><span class="line">    <span class="hljs-attr">port:</span> <span class="hljs-number">8010</span></span><br><span class="line">    <span class="hljs-attr">targetPort:</span> <span class="hljs-number">8010</span></span><br><span class="line"><span class="hljs-meta">---</span></span><br><span class="line"><span class="hljs-attr">apiVersion:</span> <span class="hljs-string">apps/v1</span></span><br><span class="line"><span class="hljs-attr">kind:</span> <span class="hljs-string">Deployment</span></span><br><span class="line"><span class="hljs-attr">metadata:</span></span><br><span class="line">  <span class="hljs-attr">name:</span> <span class="hljs-string">resource-api</span></span><br><span class="line">  <span class="hljs-attr">labels:</span></span><br><span class="line">    <span class="hljs-attr">addonmanager.kubernetes.io/mode:</span> <span class="hljs-string">Reconcile</span></span><br><span class="line">    <span class="hljs-attr">app_type:</span> <span class="hljs-string">backend</span></span><br><span class="line"><span class="hljs-attr">spec:</span></span><br><span class="line">  <span class="hljs-attr">selector:</span></span><br><span class="line">    <span class="hljs-attr">matchLabels:</span></span><br><span class="line">      <span class="hljs-attr">app:</span> <span class="hljs-string">resource-api</span></span><br><span class="line">  <span class="hljs-attr">replicas:</span> <span class="hljs-number">3</span></span><br><span class="line">  <span class="hljs-attr">template:</span></span><br><span class="line">    <span class="hljs-attr">metadata:</span></span><br><span class="line">      <span class="hljs-attr">labels:</span></span><br><span class="line">        <span class="hljs-attr">app:</span> <span class="hljs-string">resource-api</span></span><br><span class="line">    <span class="hljs-attr">spec:</span></span><br><span class="line">      <span class="hljs-attr">containers:</span></span><br><span class="line">      <span class="hljs-bullet">-</span> <span class="hljs-attr">name:</span> <span class="hljs-string">resource-api</span></span><br><span class="line">        <span class="hljs-attr">image:</span> <span class="hljs-number">192.168</span><span class="hljs-number">.1</span><span class="hljs-number">.113</span><span class="hljs-string">/library/resource-api:1.0</span></span><br><span class="line">        <span class="hljs-attr">ports:</span></span><br><span class="line">        <span class="hljs-bullet">-</span> <span class="hljs-attr">containerPort:</span> <span class="hljs-number">8010</span></span><br></pre></td></tr></table></figure><h4 id="执行部署-1"><a href="#执行部署-1" class="headerlink" title="执行部署"></a>执行部署</h4><p><code>kubectl apply -f resource-api.yaml</code></p><h4 id="检查服务-1"><a href="#检查服务-1" class="headerlink" title="检查服务"></a>检查服务</h4><figure class="highlight shell hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 查看resource-api 的service ip地址</span></span><br><span class="line">kubectl get service -o wide</span><br><span class="line">---</span><br><span class="line">NAME           TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)        AGE     SELECTOR</span><br><span class="line">kubernetes     ClusterIP   10.68.0.1       &lt;none&gt;        443/TCP        3d20h   &lt;none&gt;</span><br><span class="line">nginx-test     NodePort    10.68.44.102    &lt;none&gt;        80:25033/TCP   23h     app=nginx-test</span><br><span class="line">resource-api   ClusterIP   10.68.102.244   &lt;none&gt;        8010/TCP       40s     app=resource-api</span><br><span class="line">user-api       ClusterIP   10.68.15.227    &lt;none&gt;        5000/TCP       3m58s   app=user-api</span><br><span class="line">---</span><br><span class="line"><span class="hljs-meta">#</span><span class="hljs-bash"> 测试访问是否ok</span></span><br><span class="line">curl 10.68.102.244:8010</span><br></pre></td></tr></table></figure><h4 id="返回"><a href="#返回" class="headerlink" title="返回"></a>返回</h4><figure class="highlight json hljs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="hljs-attr">"self_hostname"</span>: <span class="hljs-string">"resource-api-6bf957c989-l7j4s"</span>,</span><br><span class="line">  <span class="hljs-attr">"book_id"</span>: <span class="hljs-number">1</span>,</span><br><span class="line">  <span class="hljs-attr">"book_name"</span>: <span class="hljs-string">"《钢铁是怎样炼成的》"</span>,</span><br><span class="line">  <span class="hljs-attr">"book_author"</span>: <span class="hljs-string">"不知"</span>,</span><br><span class="line">  <span class="hljs-attr">"book_size"</span>: <span class="hljs-number">120973</span>,</span><br><span class="line">  <span class="hljs-attr">"book_info"</span>: <span class="hljs-string">"序言 1 2 3 4 5 6 7"</span>,</span><br><span class="line">  <span class="hljs-attr">"status"</span>: <span class="hljs-number">200</span>,</span><br><span class="line">  <span class="hljs-attr">"user_info"</span>: &#123;</span><br><span class="line">    <span class="hljs-attr">"hostname"</span>: <span class="hljs-string">"user-api-84f8484446-j4nxz"</span>,</span><br><span class="line">    <span class="hljs-attr">"user_name"</span>: <span class="hljs-string">"xiaoming"</span>,</span><br><span class="line">    <span class="hljs-attr">"passport"</span>: <span class="hljs-string">"28dku73kd0210ewl43y47d"</span>,</span><br><span class="line">    <span class="hljs-attr">"role_id"</span>: <span class="hljs-number">2</span>,</span><br><span class="line">    <span class="hljs-attr">"time"</span>: <span class="hljs-string">"1574824257.6201055"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;hr&gt;
&lt;p&gt;举例我们一共有两个项目，一个是资源库resource-api，一个是用户及权限user-api，在资源库中需要调用用户模块鉴别用户的信息。&lt;br&gt;在k8s内部这两个服务是如何通信的呢？&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="kubernetes" scheme="https://www.izhihu.me/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>helloworld</title>
    <link href="https://www.izhihu.me/2019/11/25/helloworld/"/>
    <id>https://www.izhihu.me/2019/11/25/helloworld/</id>
    <published>2019-11-25T09:22:52.000Z</published>
    <updated>2019-11-25T09:22:52.270Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
    
  </entry>
  
</feed>
